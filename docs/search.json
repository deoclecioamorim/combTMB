[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Deoclecio Jardim Amorim. Author, maintainer. Afranio Marcio Correa Vieira. Author. Clarice Garcia Borges Demetrio. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jardim Amorim D, Marcio Correa Vieira , Garcia Borges Demetrio C (2023). combTMB: Combined Models using Template Model Builder. R package version 0.0.0.9000.","code":"@Manual{,   title = {combTMB: Combined Models using Template Model Builder},   author = {Deoclecio {Jardim Amorim} and Afranio {Marcio Correa Vieira} and Clarice {Garcia Borges Demetrio}},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"combtmbcombined-models-using-template-model-builder","dir":"","previous_headings":"","what":"Combined Models using Template Model Builder","title":"Combined Models using Template Model Builder","text":"Deoclecio J. Amorim - deocleciojardim@usp.br, ESALQ-USP combTMB R package implements extended random effects approach model repeated, overdispersed binary count data (called combined models). Furthermore, fit linear generalized linear mixed. adjustment models done maximum likelihood TMB (Template Model Builder). common application superdispersed correlated longitudinal data. See Molenberghs, G., Verbeke, G. Demetrio, C.G. (2007) doi:10.1007/s10985-007-9064-y Molenberghs et al. (2012) doi:10.1016/j.jmva.2012.05.005. Joint work Afrânio Márcio Corrêa Vieira Clarice G.B. Demétrio.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Combined Models using Template Model Builder","text":"Assuming C++ compiler installed, can install development version combTMB like :","code":"# install.packages(\"remotes\") remotes::install_github(\"deoclecioamorim/combTMB\", dependencies = TRUE)"},{"path":"/index.html","id":"basic-use","dir":"","previous_headings":"","what":"Basic use","title":"Combined Models using Template Model Builder","text":"syntax combTMB similar lme4 glmmTMB packages. main function combTMB(...). Currently, methods implemented \"combTMB\" objects ","code":"library(combTMB) #> Package 'combTMB' version 0.0.0.9000 #> Type 'citation(\"combTMB\")' for citing this R package in publications. # Poisson-Normal model -------------------------------------------------------- m1 <- combTMB(OT ~ Period+(1|Donor), family=poisson(), data=embryos) summary(m1) #> Family: poisson  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7839.5      7845.5      7860.7        1145  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.69168    0.03307  81.397  < 2e-16 *** #> PeriodP2     0.06419    0.01859   3.454 0.000553 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)    0.268      0.025 #>  #> Number of subjects: 318 # Methods -------------------------------------------------------------------- print(m1) #>  #> combTMB regression models #> Call:  combTMB(formula = OT ~ Period + (1 | Donor), #>            data = embryos, #>            family = poisson(), #>            dformula = ~1) #>  #> Fixed Effects: #> (Intercept)     PeriodP2   #>     2.69168      0.06419   #>  #> Residual degrees of freedom: 1145 #> -2 x log-likelihood: 7839.525 #>  #> For more details, run the summary function summary(m1) #> Family: poisson  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7839.5      7845.5      7860.7        1145  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.69168    0.03307  81.397  < 2e-16 *** #> PeriodP2     0.06419    0.01859   3.454 0.000553 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)    0.268      0.025 #>  #> Number of subjects: 318 # Basic sanity checks on our model-------------------------------------------- sanitycombTMB(m1) #> ✔ Suggests successful convergence! #> ✔ Hessian matrix is positive definite! #> ✔ No extreme or very small eigen values detected! #> ✔ No fixed-effect standard errors are NA #> ✔ No fixed-effect standard errors look unreasonably large # Combined model: Poisson-Gamma-Normal model --------------------------------- m2 <- combTMB(OT ~ Period+(1|Donor), family=poigamma(), data=embryos) # Methods -------------------------------------------------------------------- print(m2) #>  #> combTMB regression models #> Call:  combTMB(formula = OT ~ Period + (1 | Donor), #>            data = embryos, #>            family = poigamma(), #>            dformula = ~1) #>  #> Fixed Effects: #> (Intercept)     PeriodP2   #>     2.69904      0.06813   #>  #> Residual degrees of freedom: 1144 #> -2 x log-likelihood: 7650.511 #>  #> For more details, run the summary function summary(m2) #> Family: poigamma  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Dformula: ~1  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7650.5      7658.5      7678.7        1144  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.69904    0.03475  77.662  < 2e-16 *** #> PeriodP2     0.06813    0.02520   2.704  0.00686 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>   #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)   0.2484      0.024 #> Overdisp.(theta)   21.9242      2.498 #>  #> Number of subjects: 318 # Basic sanity checks on our model-------------------------------------------- sanitycombTMB(m2) #> ✔ Suggests successful convergence! #> ✔ Hessian matrix is positive definite! #> ✔ No extreme or very small eigen values detected! #> ✔ No fixed-effect standard errors are NA #> ✔ No fixed-effect standard errors look unreasonably large methods(class = \"combTMB\") #>  [1] anova        coefDisp     df.residual  dispersion   family       #>  [6] fitted       formula      getME        logLik       model.frame  #> [11] model.matrix nobs         partvar      predict      print        #> [16] ranef        residuals    simulate     summary      terms        #> [21] vcov         #> see '?methods' for accessing help and source code"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Combined Models using Template Model Builder","text":"combTMB package licensed GNU General Public License, version 3, see file LICENSE.md, © 2022 Deoclecio J. Amorim.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/combTMB-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for 'combTMB' objects — combTMB-methods","title":"Method for 'combTMB' objects — combTMB-methods","text":"Method 'combTMB' objects","code":""},{"path":"/reference/combTMB-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for 'combTMB' objects — combTMB-methods","text":"","code":"# S3 method for combTMB print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)  # S3 method for combTMB fitted(object, ...)  # S3 method for combTMB family(object, ...)  # S3 method for combTMB nobs(object, ...)  # S3 method for combTMB df.residual(object, ...)  # S3 method for combTMB logLik(object, ...)  # S3 method for combTMB vcov(object, ...)  # S3 method for vcov.combTMB print(x, ...)  # S3 method for combTMB model.matrix(object, ...)  # S3 method for combTMB fixef(object, ...)  coefDisp(object, ...)"},{"path":"/reference/combTMB-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for 'combTMB' objects — combTMB-methods","text":"x object class combTMB digits minimal number significant digits, see print.default ... currently used object object class combTMB","code":""},{"path":"/reference/combTMB-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for 'combTMB' objects — combTMB-methods","text":".","code":""},{"path":"/reference/combTMB-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Method for 'combTMB' objects — combTMB-methods","text":"print method fixef.combTMB object displays non-trivial components.","code":""},{"path":"/reference/combTMB-package.html","id":null,"dir":"Reference","previous_headings":"","what":"combTMB: Combined Models using Template Model Builder — combTMB-package","title":"combTMB: Combined Models using Template Model Builder — combTMB-package","text":"Implements extended random effects approach model repeated, overdispersed binary count data (called combined models). Furthermore, fit linear generalized linear mixed. adjustment models done maximum likelihood 'TMB' (Template Model Builder). common application superdispersed correlated longitudinal data. See Molenberghs, G., Verbeke, G. Demetrio, C.G. (2007) doi:10.1007/s10985-007-9064-y  Molenberghs et al. (2012)doi:10.1016/j.jmva.2012.05.005 .","code":""},{"path":"/reference/combTMB-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"combTMB: Combined Models using Template Model Builder — combTMB-package","text":"Maintainer: Deoclecio Jardim Amorim deocleciojardimamorim@gmail.com (ORCID) Authors: Afranio Marcio Correa Vieira (ORCID) Clarice Garcia Borges Demetrio (ORCID)","code":""},{"path":"/reference/combTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Combined Models with TMB — combTMB","title":"Fit Combined Models with TMB — combTMB","text":"Fit Hierarchical models normal conjugate random effects TMB (Template Model Builder) R package. can model hierarchical data subject within-unit correlation /overdispersion.","code":""},{"path":"/reference/combTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Combined Models with TMB — combTMB","text":"","code":"combTMB(   formula,   data = NULL,   family = gaussian(link = \"identity\"),   dformula = ~1,   REML = FALSE,   doMarginal = FALSE,   weights = NULL,   offset = NULL,   contrasts = NULL,   na.action,   starting_val = \"zero\",   control = combTMBcontrol(),   map = NULL,   size = NULL,   dofit = TRUE,   silent = TRUE )"},{"path":"/reference/combTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Combined Models with TMB — combTMB","text":"formula combined fixed random effects formula, following lme4 syntax. IID random intercepts possible using e.g., `+ (1 | Subject)` `Subject` factor representing groups. data optional data frame containing variables model. missing data, variables ara taken environment(formula). required, strongly recommended. specified, warning message issued. family family function, character string naming family function. Options [gaussian()], [binomial()], [poisson()], Beta(), betabinomial(), poigamma(), bb() bb_al(). binomial family options, see 'Binomial families' Details  section . details see family_combTMB. dformula object class \"formula\" describe model dispersion containing fixed effects: default ~1: specifies standard dispersion family, however argument ignored families dispersion parameter, example [binomial()] family. One can declare linear predictor dispersion, internally log link applied. REML logical: use REML (restricted maximum likelihood) estimation rather maximum likelihood. Internally, adds fixed effects list random effects integrate . doMarginal marginalization regression parameters available random effect following families: [binomial()], [poisson()] poigamma(). default NULL. argument ignored families. weights optional vector representing likelihood weights conditional model. Weights modified internally scale sum 1. default NULL. Can also used testing binomial family - see Details. `weights` argument needs vector   name variable data frame offset numeric vector representing model offset. `offset` argument needs vector name variable data frame. *included prediction.* contrasts optional list. See contrasts.arg model.matrix.default. na.action function specifies handle observations containing NAs. default action (na.omit, inherited 'factory fresh' value getOption(\"na.action\")) strips observations missing values variables. Using na.action = na.exclude. starting_val character indicating method used provide initial values. Options estimated values fitted model using glm.fit \"fm\" initial parameter values zero \"zero\". control optimization control options via combTMBcontrol. map named list user can set parameter constant value instead estimating . fixed value one established initial guess optimization process. understand use map argument consider example, map=list(beta=factor(c(1,NA))), first fixed effect parameter modeled second parameter kept initial value. See [TMB::MakeADFun()] details. size number trials binomial model. dofit fit model (`TRUE`) return processed data without fitting (`FALSE`)? silent silent include optimization details? Helpful set `FALSE` models take fit.","code":""},{"path":"/reference/combTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Combined Models with TMB — combTMB","text":"object (list) class `combTMB`. number useful elements among : tmb_obj: TMB object created [TMB::MakeADFun()] tmb_report: output [TMB::sdreport()] Gradients: log likelihood gradients respect fixed effect fit: output [stats::nlminb()] [stats::optim()] data: fitted data tmb_params: parameters list passed [TMB::MakeADFun()] ...","code":""},{"path":"/reference/combTMB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Combined Models with TMB — combTMB","text":"Binomial families binomial family, response variable can four ways: () response can factor (model ranks first level versus others); (ii) response can binary (0/1); (iii) response can array form `cbind(success, failure)`; (iv) response can proportions, 'weights' argument used specify binomial size(N) parameter (`prop ~ ..., weights = N`). Marginalization option marginalizing regression parameters currently available [binomial()], [poisson()] poigamma() one random effect.","code":""},{"path":"/reference/combTMB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Combined Models with TMB — combTMB","text":"Molenberghs, G., Verbeke, G., Demetrio, C. G. (2007). extended random-effects approach modeling repeated, overdispersed count data. Lifetime data analysis, 13(4), 513-531. Molenberghs, G., Verbeke, G., Demetrio, C. G., Vieira, . M. (2010). family generalized linear models repeated measures normal conjugate random effects. Statistical science, 25(3), 325-347. Molenberghs, G., Verbeke, G., Iddi, S., Demetrio, C. G. (2012). combined beta normal random-effects model repeated, overdispersed binary binomial data. Journal Multivariate Analysis, 111, 94-109. Iddi, S. Molenberghs, G. (2012). combined overdispersed marginalized multilevel model. Computational Statistics & Data Analysis, 56(6), 1944-1951. Molenberghs, G., Verbeke, G., Demetrio, C. G. (2017). Hierarchical models normal conjugate random effects: review. Statistics Operations Research Transactions, 41(2), 191-253.","code":""},{"path":"/reference/combTMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Combined Models with TMB — combTMB","text":"","code":"# \\donttest{ library(combTMB) #Poisson-Normal model m1 <- combTMB(OT ~ Period+(1|Donor), family=poisson(), data=embryos) summary(m1) #> Family: poisson  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7839.5      7845.5      7860.7        1145  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.69168    0.03307  81.397  < 2e-16 *** #> PeriodP2     0.06419    0.01859   3.454 0.000553 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)    0.268      0.025 #>  #> Number of subjects: 318   #Using 'map' to fix parameter m1_map <- combTMB(OT ~ Period+(1|Donor), family=poisson(), map=list(beta=factor(c(1,NA))),                   data=embryos) summary(m1_map) #> Family: poisson  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7851.5      7855.5      7865.6        1146  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.73290    0.03099   88.18   <2e-16 *** #> PeriodP2     0.00000         NA      NA       NA     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)   0.2715      0.025 #>  #> Number of subjects: 318   #Combined model: Poisson-Gamma-Normal model m2 <- combTMB(OT ~ Period+(1|Donor), family=poigamma(), data=embryos) summary(m2) #> Family: poigamma  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Dformula: ~1  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7650.5      7658.5      7678.7        1144  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.69904    0.03475  77.662  < 2e-16 *** #> PeriodP2     0.06813    0.02520   2.704  0.00686 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>   #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)   0.2484      0.024 #> Overdisp.(theta)   21.9242      2.498 #>  #> Number of subjects: 318   #Combined overdispersed and marginalized multilevel models (COMMM) m2_COMMM <- combTMB(OT ~ Period+(1|Donor), family=poigamma(), doMarginal=TRUE,data=embryos) summary(m2_COMMM) #> Family: poigamma  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Dformula: ~1  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7650.5      7658.5      7678.7        1144  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.82325    0.03628  77.828  < 2e-16 *** #> PeriodP2     0.06813    0.02520   2.704  0.00686 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>   #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)   0.2484      0.024 #> Overdisp.(theta)   21.9243      2.498 #>  #> Number of subjects: 318   #Logistic-Normal model m3 <- combTMB(onyresp~treatn-1+treatn%in%time+(1|idnum), family = binomial(), data = toenail) summary(m3) #> Family: binomial  #> Link function: logit  #> Formula: onyresp ~ treatn - 1 + treatn %in% time + (1 | idnum)  #> Number of obs: 1908  #> -2 x logLik         AIC         BIC    df.resid  #>      1252.6      1262.6      1290.4        1903  #>  #>              Estimate Std. Error z value Pr(>|z|)     #> treatn0      -2.56253    0.81191  -3.156  0.00160 **  #> treatn1      -2.82287    0.86546  -3.262  0.00111 **  #> treatn0:time -0.41415    0.04890  -8.470  < 2e-16 *** #> treatn1:time -0.57672    0.06419  -8.984  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Random effects: #>                   Estimate Std. Error #> idnum (Intercept)    21.21      6.853 #>  #> Number of subjects: 294   #Combined model: Beta-Bernoulli-Normal model m4 <- combTMB(onyresp~treatn-1+treatn%in%time+(1|idnum),       family = betabernoulli(link = \"probit\"),data = toenail,        control = combTMBcontrol(optimizer = \"nlminb\",newtonLoops = 2,                               lower = c(betad=0.1),upper = c(betad=Inf))) #> Warning: The model may not have converged. Maximum final gradient: 4.46069636421333. summary(m4) #> Family: betabernoulli  #> Link function: probit  #> Formula: onyresp ~ treatn - 1 + treatn %in% time + (1 | idnum)  #> Dformula: ~1  #> Number of obs: 1908  #> -2 x logLik         AIC         BIC    df.resid  #>      1140.7      1152.7      1186.1        1902  #>  #>              Estimate Std. Error z value Pr(>|z|)     #> treatn0       -4.5585     0.2954 -15.430  < 2e-16 *** #> treatn1       -4.6130     0.3083 -14.961  < 2e-16 *** #> treatn0:time  -1.7995     0.1513 -11.896  < 2e-16 *** #> treatn1:time  -2.1381     0.3251  -6.577  4.8e-11 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>   #>  #> Random effects: #>                   Estimate Std. Error #> idnum (Intercept) 453.8969    119.170 #> Overdisp.(theta)    0.2148      0.026 #>  #> Number of subjects: 294  # }"},{"path":"/reference/combTMBcontrol.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization control options — combTMBcontrol","title":"Optimization control options — combTMBcontrol","text":"Optimization control options","code":""},{"path":"/reference/combTMBcontrol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization control options — combTMBcontrol","text":"","code":"combTMBcontrol(   optimizer = c(\"nlminb\", \"optim\"),   optim.method = \"BFGS\",   eval.max = 2000L,   iter.max = 2000L,   maxit = 500L,   nlminbLoops = 1L,   newtonLoops = 0L,   zerodisp_val = log(sqrt(.Machine$double.eps)),   start_params = NULL,   lower = NULL,   upper = NULL,   gjp = TRUE,   ... )"},{"path":"/reference/combTMBcontrol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization control options — combTMBcontrol","text":"optimizer optimization \"nlminb\" \"optim\". optim.method default, optimizer performs minimization `BFGS` method. lower upper limits declared indicated  method `L-BFGS-B`. eval.max maximum number evaluations objective function allowed. iter.max maximum number iterations allowed. maxit maximum number iterations \"optim\" method. nlminbLoops many times run \"nlminb\" optimization. Sometimes restarting optimizer previous best values aids convergence. maximum gradient still large, try increasing `2`. newtonLoops many Newton optimization steps try \"optimHess\" running \"nlminb\".  Sometimes aids convergence. zerodisp_val value dispersion parameter dformula=~0 specified. start_params user can specify initial values parameters. lower optional named list lower bounds within optimization. upper optional named list upper bounds within optimization. gjp logical. Passed `getJointPrecision` \"sdreport\". Must `TRUE` use simulation-based methods. needed, setting  `FALSE` reduce object size. ... currently used.","code":""},{"path":"/reference/combTMBcontrol.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Optimization control options — combTMBcontrol","text":"Deoclecio Jardim Amorim <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/combTMBglm-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for 'combTMBglm' objects — combTMBglm-methods","title":"Method for 'combTMBglm' objects — combTMBglm-methods","text":"Method 'combTMBglm' objects","code":""},{"path":"/reference/combTMBglm-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for 'combTMBglm' objects — combTMBglm-methods","text":"","code":"# S3 method for combTMBglm print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)  # S3 method for combTMBglm fitted(object, ...)  # S3 method for combTMBglm family(object, ...)  # S3 method for combTMBglm df.residual(object, ...)  # S3 method for combTMBglm coef(object, ...)  # S3 method for combTMBglm logLik(object, ...)  # S3 method for combTMBglm vcov(object, ...)  # S3 method for combTMBglm model.matrix(object, ...)  # S3 method for combTMBglmm print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"/reference/combTMBglm-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for 'combTMBglm' objects — combTMBglm-methods","text":"x object class combTMBglm. digits minimal number _significant_ digits, see print.default. ... used. object object class combTMBglm.","code":""},{"path":"/reference/combTMBglm-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for 'combTMBglm' objects — combTMBglm-methods","text":".","code":""},{"path":"/reference/combTMBglm-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Method for 'combTMBglm' objects — combTMBglm-methods","text":"Deoclecio Jardim Amorim  <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/combTMBglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust glm models — combTMBglm","title":"Adjust glm models — combTMBglm","text":"Adjust glm models","code":""},{"path":"/reference/combTMBglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust glm models — combTMBglm","text":"","code":"combTMBglm(   formula,   family = gaussian(link = \"identity\"),   data = NULL,   starting_val = \"zero\",   contrasts = NULL,   weights = NULL,   size = NULL,   offset = NULL,   dofit = TRUE,   map = NULL,   silent = TRUE,   control = combTMBcontrol(),   na.action )"},{"path":"/reference/combTMBglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust glm models — combTMBglm","text":"formula object class \"formula\" describe model mean. family character indicating model used. Options model Poisson:\"poisson\", negative binomial type 2 \"nb2\", binomial \"binomial\" - see Details. data optional data frame containing variables model. missing data, variables ara taken environment(formula). starting_val character indicating method used provide initial values. Options estimated values fitted model using glm.fit \"fm\" initial parameter values zero \"zero\". contrasts optional list. See contrasts.arg model.matrix.default. weights optional vector \"prior weights\" used fitting process. NULL numeric vector - see Details. size Number trials binomial model. offset numeric vector representing model offset. dofit Fit model (`TRUE`) return processed data without fitting (`FALSE`)? map xxx. silent Silent include optimization details? Helpful set `FALSE` models take fit. control Optimization control options via combTMBcontrol. na.action function specifies handle observations containing NAs. default action (na.omit, inherited 'factory fresh' value getOption(\"na.action\")) strips observations missing values variables. Using na.action = na.exclude","code":""},{"path":"/reference/combTMBglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust glm models — combTMBglm","text":"retorna um objeto da classe combTMBglm.","code":""},{"path":"/reference/combTMBglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust glm models — combTMBglm","text":"Link function: Options link=\"log\", link=\"logit\",  link=\"probit\" link=\"cloglog\". binomial models can specified typically two-column matrix cbind(successes,failures)~... form prob ~ ..., weights = N. case family gaussian. Weights \\(w_i\\) normalized multiplying \\(\\frac{n}{\\sum_{=1}^{n}w_i}\\), n sample size. Thus, estimated covariance matrix parameter estimators scale invariant `weights` variable.","code":""},{"path":"/reference/combTMBglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adjust glm models — combTMBglm","text":"Deoclecio Jardim Amorim <deocleciojardimamorim@gmail.com>","code":""},{"path":"/reference/combTMBglmm-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for 'combTMBglmm' objects — combTMBglmm-methods","title":"Method for 'combTMBglmm' objects — combTMBglmm-methods","text":"Method 'combTMBglmm' objects","code":""},{"path":"/reference/combTMBglmm-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for 'combTMBglmm' objects — combTMBglmm-methods","text":"","code":"# S3 method for combTMBglmm df.residual(object, ...)  # S3 method for combTMBglmm logLik(object, ...)  # S3 method for combTMBglmm vcov(object, ...)  # S3 method for combTMBglmm model.matrix(object, ...)  # S3 method for combTMBglmm fixef(object, ...)"},{"path":"/reference/combTMBglmm-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for 'combTMBglmm' objects — combTMBglmm-methods","text":"object object class combTMBglmm ... Currently used","code":""},{"path":"/reference/combTMBglmm-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for 'combTMBglmm' objects — combTMBglmm-methods","text":".","code":""},{"path":"/reference/combTMBglmm-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Method for 'combTMBglmm' objects — combTMBglmm-methods","text":"print method fixef.combTMBglmm object displays non-trivial components.","code":""},{"path":"/reference/combTMBglmm-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Method for 'combTMBglmm' objects — combTMBglmm-methods","text":"Deoclecio Jardim Amorim  <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/combTMBglmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","title":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","text":"Fit Generalized Linear Mixed Model (GLMM)","code":""},{"path":"/reference/combTMBglmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","text":"","code":"combTMBglmm(   formula,   family = poisson(link = \"log\"),   data = NULL,   starting_val = \"zero\",   contrasts = NULL,   size = NULL,   weights = NULL,   offset = NULL,   dofit = TRUE,   silent = TRUE,   control = combTMBcontrol(),   map = NULL,   REML = FALSE,   doMarginal = FALSE,   na.action )"},{"path":"/reference/combTMBglmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","text":"formula Combined fixed random effects formula, following lme4 syntax. IID random intercepts possible using e.g., `+ (1 | Subject)` `Subject` factor representing groups. family family function, character string naming family function. Options Poisson-Gamma-Normal PGN(link = \"log\"), Bernoulli-Beta-Normal binomial(link = \"log\") Bernoulli-Beta-Normal-Aproximation-Logit binomial_AL(link = \"probit\"). details see family_combTMB details combTMB-specific families. data optional data frame containing variables model. missing data, variables ara taken environment(formula). starting_val character indicating method used provide initial values. Options estimated values fitted model using glm.fit \"fm\" initial parameter values zero \"zero\". contrasts optional list. See contrasts.arg model.matrix.default. size number trials binomial model. weights optional vector \"prior weights\" used fitting process. NULL numeric vector - see Details. offset numeric vector representing model offset. dofit Fit model (`TRUE`) return processed data without fitting (`FALSE`)? silent Silent include optimization details? Helpful set `FALSE` models take fit. control Optimization control options via combTMBcontrol. map xxxx. REML Logical: use REML (restricted maximum likelihood) estimation rather maximum likelihood. doMarginal marginalização disponivel apenas para um efeito aleatório. na.action function specifies handle observations containing NAs. default action (na.omit, inherited 'factory fresh' value getOption(\"na.action\")) strips observations missing values variables. Using na.action = na.exclude","code":""},{"path":"/reference/combTMBglmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","text":"return class object combTMBglmm.","code":""},{"path":"/reference/combTMBglmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","text":"Link function: Options link=\"log\", link=\"logit\",  link=\"probit\" link=\"cloglog\". REML=TRUE fixed effects added list random effects  integrate . xxx.","code":""},{"path":"/reference/combTMBglmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Generalized Linear Mixed Model (GLMM) — combTMBglmm","text":"Deoclecio Jardim Amorim <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/dharma_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"DHARMa residuals — dharma_residuals","title":"DHARMa residuals — dharma_residuals","text":"DHARMa residuals","code":""},{"path":"/reference/dharma_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DHARMa residuals — dharma_residuals","text":"","code":"dharma_residuals(object, nsim = 250, seed = 123, plot = TRUE, ...)"},{"path":"/reference/dharma_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DHARMa residuals — dharma_residuals","text":"object “combTMB” model nsim number simulations executed (n > 1). default 250, however recommended run 1000 simulations seed random number seed. Guarantees reproducibility results plot logical. Default `TRUE`, `FALSE` graph plotted ... arguments pass [DHARMa::createDHARMa()]","code":""},{"path":"/reference/dharma_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DHARMa residuals — dharma_residuals","text":"list two objects out_1 out_2 invisibly returned. out_1 data frame expected observed values returned, `plot = FALSE`, can assign output object plot residuals, example, ggplo2 package. out_2 complete output function [DHARMa::createDHARMa()] returned, lets us use DHARMa tools.","code":""},{"path":"/reference/dharma_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DHARMa residuals — dharma_residuals","text":"","code":"# \\donttest{ library(combTMB) #Poisson-Normal model m1 <- combTMB(OT ~ Period+(1|Donor), family=poisson(), data=embryos)  #Dharma residuals if (require(\"DHARMa\", quietly = TRUE)) { r <- dharma_residuals(m1, nsim=250) head(r$out_1) } #> This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')  #>      Observed    Expected #> 1 0.000000000 0.000870322 #> 2 0.000000000 0.001740644 #> 3 0.000000000 0.002610966 #> 4 0.000000000 0.003481288 #> 5 0.001145639 0.004351610 #> 6 0.001622033 0.005221932 # }"},{"path":"/reference/dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residual standard deviation or dispersion parameter — dispersion","title":"Extract residual standard deviation or dispersion parameter — dispersion","text":"Extract residual standard deviation dispersion parameter","code":""},{"path":"/reference/dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residual standard deviation or dispersion parameter — dispersion","text":"","code":"dispersion(object, ...)"},{"path":"/reference/dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residual standard deviation or dispersion parameter — dispersion","text":"object object class “combTMB” ... currently used.","code":""},{"path":"/reference/dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residual standard deviation or dispersion parameter — dispersion","text":".","code":""},{"path":"/reference/Effect.combTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate effects for combTMB — Effect.combTMB","title":"Calculate effects for combTMB — Effect.combTMB","text":"Calculate effects combTMB","code":""},{"path":"/reference/Effect.combTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate effects for combTMB — Effect.combTMB","text":"","code":"Effect.combTMB(focal.predictors, mod, ...)"},{"path":"/reference/Effect.combTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate effects for combTMB — Effect.combTMB","text":"focal.predictors character vector one predictors model order. mod regression model object.  specific method exists class mod, Effect.default called. ... arguments passed .","code":""},{"path":"/reference/Effect.combTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate effects for combTMB — Effect.combTMB","text":"Output [effects::effect()]. Can plotted associated `plot()` method.","code":""},{"path":"/reference/Effect.combTMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate effects for combTMB — Effect.combTMB","text":"","code":"# \\donttest{ library(combTMB) fit <- combTMB(OT ~ Period,family =poisson(), data=embryos) effects::effect(\"Period\", fit) #>  #>  Period effect #> Period #>       P1       P2  #> 16.26940 18.50731  plot(effects::effect(\"Period\", fit))  # }"},{"path":"/reference/Effect.combTMBglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate effects for combTMBglm — Effect.combTMBglm","title":"Calculate effects for combTMBglm — Effect.combTMBglm","text":"Calculate effects combTMBglm","code":""},{"path":"/reference/Effect.combTMBglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate effects for combTMBglm — Effect.combTMBglm","text":"","code":"Effect.combTMBglm(focal.predictors, mod, ...)"},{"path":"/reference/Effect.combTMBglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate effects for combTMBglm — Effect.combTMBglm","text":"focal.predictors character vector one predictors model order. mod regression model object.  specific method exists class mod, Effect.default called. ... arguments passed .","code":""},{"path":"/reference/Effect.combTMBglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate effects for combTMBglm — Effect.combTMBglm","text":"Output [effects::effect()]. Can plotted associated `plot()` method.","code":""},{"path":"/reference/embryos.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on embryo production in Holstein cows — embryos","title":"Data on embryo production in Holstein cows — embryos","text":"vitro embryo production (IVP) reproductive biotechnology  greatest impact genetic improvement cattle, according  International Embryo Technology Society - IETS (Viana, 2020).  dataset describes main variables used measure quality/quantity  oocytes embryos Holstein cows. composition database  obtained follicular aspiration sessions, performed January 6  December 28, 2020.","code":""},{"path":"/reference/embryos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data on embryo production in Holstein cows — embryos","text":"","code":"data(embryos, package = \"combTMB\")"},{"path":"/reference/embryos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on embryo production in Holstein cows — embryos","text":"data frame 1148 rows 15 variables: Period periods year follicular aspiration sessions performed (P1 P2). P1 (period highest temperature comprising months June, July, August, September October) period P2 (period lowest temperature comprising remaining seven months) Interval interval ovum pick-performed donor (2wks - two, 3wks - three na - three weeks) Injections number injections follicle stimulating hormone - FSH (0, 1 5), Pregnant 0 = empty 1 = pregnant Status H-heifers, M-lactating cows D-dry cows Donor variable referring donor identification O12 number grade one two oocytes OM number oocytes grade one grade four OT total number oocytes Sire identification semen donor bull sexed sexed semen: 1 = yes 0 = IVC number oocytes vitro culture D3 number cleaved zygotes Embryos number embryos id number subjects","code":""},{"path":"/reference/embryos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data on embryo production in Holstein cows — embryos","text":"Viana, J. (2020). 2019 statistics embryo production transfer domestic farm animals, Embryo Technology Newsletter 38(4): 7–26","code":""},{"path":"/reference/emmeans.combTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated marginal means with the emmeans package with comTMB — emmeans.combTMB","title":"Estimated marginal means with the emmeans package with comTMB — emmeans.combTMB","text":"Methods using emmeans package combTMB. emmeans package computes estimated marginal means fixed effects.","code":""},{"path":"/reference/emmeans.combTMB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimated marginal means with the emmeans package with comTMB — emmeans.combTMB","text":"https://aosmith.rbind.io/2019/03/25/getting-started--emmeans/","code":""},{"path":"/reference/Extractors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or obtain generalized components from a glm or glmm model or combined model — extractors","title":"Extract or obtain generalized components from a glm or glmm model or combined model — extractors","text":"Extract obtain generalized components glm glmm model combined model","code":""},{"path":"/reference/Extractors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or obtain generalized components from a glm or glmm model or combined model — extractors","text":"","code":"# S3 method for combTMB getME(object, name = c(\"X\", \"Xd\", \"Z\", \"beta\", \"betad\", \"b\"), ...)"},{"path":"/reference/Extractors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or obtain generalized components from a glm or glmm model or combined model — extractors","text":"object object class “combTMB” name component retrieved ... currently used.","code":""},{"path":"/reference/Extractors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or obtain generalized components from a glm or glmm model or combined model — extractors","text":".","code":""},{"path":[]},{"path":"/reference/extract_mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MCMC samples from an combTMB model fit with tmbstan. — extract_mcmc","title":"Extract MCMC samples from an combTMB model fit with tmbstan. — extract_mcmc","text":"Extract MCMC samples combTMB model fit tmbstan.","code":""},{"path":"/reference/extract_mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MCMC samples from an combTMB model fit with tmbstan. — extract_mcmc","text":"","code":"extract_mcmc(object)"},{"path":"/reference/extract_mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MCMC samples from an combTMB model fit with tmbstan. — extract_mcmc","text":"object Output [tmbstan::tmbstan()] run `tmb_obj` element [combTMB::combTMB()] model. E.g., `tmbstan::tmbstan(your_model$tmb_obj)`.","code":""},{"path":"/reference/extract_mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract MCMC samples from an combTMB model fit with tmbstan. — extract_mcmc","text":"Returns matrix parameter samples. Rows correspond order `your_model$tmb_obj$env$last.par.best`. Columns correspond posterior samples.","code":""},{"path":"/reference/families.html","id":null,"dir":"Reference","previous_headings":"","what":"Family functions for combTMB — family_combTMB","title":"Family functions for combTMB — family_combTMB","text":"Family functions combTMB","code":""},{"path":"/reference/families.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family functions for combTMB — family_combTMB","text":"","code":"cmp(link = \"log\")  gpoisson(link = \"log\")  geometric(link = \"log\")  bbn(link = \"log\")  beta_fam(link = \"logit\")  betabinomial(link = \"logit\")  poigamma(link = \"log\")  gnb(link = \"log\")  betabernoulli(link = \"logit\")  betabernoulli_al(link = \"probit\")"},{"path":"/reference/families.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family functions for combTMB — family_combTMB","text":"link character link function mean (\"log\", \"logit\", \"probit\", \"cloglog\",\"inverse\" ,\"identity\", \"sqrt\").","code":""},{"path":"/reference/families.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Family functions for combTMB — family_combTMB","text":"list elements `family`, `link`, `linkfun`, `linkinv`, `mu.eta`.","code":""},{"path":"/reference/families.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Family functions for combTMB — family_combTMB","text":"dispersion model, log link used. Denoting variance \\(V\\), dispersion parameter \\(\\phi=\\exp(\\eta)\\) (\\(\\eta\\) linear predictor dispersion model), predicted mean \\(\\mu\\): gaussian (base R): constant \\(V=\\phi\\). Beta Beta distribution: parameterization Cribari-Neto Zeileis (2010) (betareg package); \\(V=\\mu(1-\\mu)/(\\phi+1)\\). betabinomial Beta-binomial distribution: parameterized according Morris (1997). \\(V=\\mu(1-\\mu)(n(\\phi+n)/(\\phi+1))\\). poigamma Poisson-Gamma: combined model  count data accommodates overdispersion clustering two separate random effects sets, gamma normal, respectively (Molenberghs et al., 2007)). Negative binomial distribution type II: quadratic parameterization  (Hardin & Hilbe 2007).  \\(V=\\mu(1+\\mu/\\phi) = \\mu+\\mu^2/\\phi\\). betabernoulli Beta-Bernoulli: combined model model binary data accommodates overdispersion clustering two separate random effects sets, Beta normal, respectively (Molenberghs et al., 2010 Molenberghs et al., 2012)). betabernoulli_al Beta-Bernoulli: combined model binary data accommodates overdispersion clustering two separate random effects sets, Beta normal, respectively (Molenberghs et al., 2010 Molenberghs et al., 2012)).","code":""},{"path":"/reference/families.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Family functions for combTMB — family_combTMB","text":"Hardin JW & Hilbe JM (2007). \"Generalized linear models extensions.\"  Stata Press. Ferrari SLP, Cribari-Neto F (2004). \"Beta Regression Modelling Rates Proportions.\" J. Appl. Stat.  31(7), 799-815. Molenberghs, G., Verbeke, G., Demetrio, C. G. (2007). extended random-effects approach modeling repeated, overdispersed count data. Lifetime data analysis, 13(4), 513-531. Molenberghs, G., Verbeke, G., Demetrio, C. G., Vieira, . M. (2010). family generalized linear models repeated measures normal conjugate random effects. Statistical science, 25(3), 325-347. Molenberghs, G., Verbeke, G., Iddi, S., Demetrio, C. G. (2012). combined beta normal random-effects model repeated, overdispersed binary binomial data. Journal Multivariate Analysis, 111, 94-109. Morris  W (1997). \"Disentangling Effects Induced Plant Defenses  Food Quantity Herbivores Fitting Nonlinear Models.\"  American Naturalist 150:299-327.","code":""},{"path":"/reference/families.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Family functions for combTMB — family_combTMB","text":"","code":"library(combTMB) cmp(link = \"log\") #>  #> Family: cmp  #> Link function: log  #>  gpoisson(link = \"log\") #>  #> Family: gpoisson  #> Link function: log  #>  geometric(link = \"log\") #>  #> Family: geometric  #> Link function: log  #>  bbn(link = \"log\") #>  #> Family: bbn  #> Link function: log  #>  beta_fam(link = \"logit\") #>  #> Family: beta_fam  #> Link function: logit  #>  betabinomial(link = \"logit\") #>  #> Family: betabinomial  #> Link function: logit  #>  poigamma(link = \"log\") #>  #> Family: poigamma  #> Link function: log  #>  gnb(link = \"log\") #>  #> Family: gnb  #> Link function: log  #>  betabernoulli(link = \"logit\") #>  #> Family: betabernoulli  #> Link function: logit  #>  betabernoulli_al(link = \"probit\") #>  #> Family: betabernoulli_al  #> Link function: probit  #>"},{"path":"/reference/lrtests-combTMBglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ratio tests for nested combTMBglm models — lrtests-combTMBglm","title":"Likelihood ratio tests for nested combTMBglm models — lrtests-combTMBglm","text":"Likelihood ratio tests nested combTMBglm models","code":""},{"path":"/reference/lrtests-combTMBglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ratio tests for nested combTMBglm models — lrtests-combTMBglm","text":"","code":"# S3 method for combTMBglm anova(object, ...)"},{"path":"/reference/lrtests-combTMBglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ratio tests for nested combTMBglm models — lrtests-combTMBglm","text":"object object class combTMBglm, result call combTMBglm(...). ... Currently used.","code":""},{"path":"/reference/lrtests-combTMBglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ratio tests for nested combTMBglm models — lrtests-combTMBglm","text":"object class \"anova\", table compenents   LR test.","code":""},{"path":"/reference/lrtests-combTMBglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood ratio tests for nested combTMBglm models — lrtests-combTMBglm","text":"Deoclecio Jardim Amorim  <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/lrtests.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","title":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","text":"Likelihood ratio tests nested combTMB models","code":""},{"path":"/reference/lrtests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","text":"","code":"# S3 method for combTMB anova(object, ...)"},{"path":"/reference/lrtests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","text":"object object class “combTMB”, result call combTMB(...) ... currently used","code":""},{"path":"/reference/lrtests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","text":"object class “combTMB”, table compenents   Likelihood ratio (LR) test","code":""},{"path":"/reference/lrtests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","text":"user's responsibility identify whether models nested!","code":""},{"path":"/reference/lrtests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood ratio tests for nested combTMB models — lrtests-combTMB","text":"","code":"# \\donttest{ library(combTMB) #Poisson-Normal model m0 <- combTMB(OT ~ 1+(1|Donor), family=poisson(), data=embryos)  #Poisson-Normal model m1 <- combTMB(OT ~ Period+(1|Donor), family=poisson(), data=embryos)  #LR test for Period anova(m0, m1) #>  #> Likelihood ratio test for combTMB regression models #>  #> \t Model 1: OT ~ 1 + (1 | Donor) #> \t Model 2: OT ~ Period + (1 | Donor) #>  #>            AIC    BIC Resid.df  logLik Chisq.df  Chisq Pr(>Chisq)     #> Model 1 7855.5 7865.6     1146 -3925.7                                #> Model 2 7845.5 7860.7     1145 -3919.8        1 11.955  0.0005451 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  # }"},{"path":"/reference/OSA_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate one-step-ahead (OSA) residuals for combTMB model. — OSA_residuals","title":"Calculate one-step-ahead (OSA) residuals for combTMB model. — OSA_residuals","text":"`r lifecycle::badge(\"experimental\")` function time consuming default computes one-step-ahead residual last 100 observations. See function oneStepPredict paper references details.","code":""},{"path":"/reference/OSA_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate one-step-ahead (OSA) residuals for combTMB model. — OSA_residuals","text":"","code":"OSA_residuals(   object,   method = c(\"oneStepGeneric\", \"fullGaussian\"),   discrete = FALSE,   conditional = 1:(nobs(object) - 100),   ... )"},{"path":"/reference/OSA_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate one-step-ahead (OSA) residuals for combTMB model. — OSA_residuals","text":"object combTMB object. method xxx. discrete Specifies whether distribution discrete case. default `FALSE` conditional index vector observations fixed OSA. default residuals last 100 observations calculated. set NULL calculate one-step-ahead residuals observations ... Currently used.","code":""},{"path":"/reference/OSA_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate one-step-ahead (OSA) residuals for combTMB model. — OSA_residuals","text":"Vector one-step-ahead residuals. model correctly specified, standard normal.","code":""},{"path":"/reference/OSA_residuals.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate one-step-ahead (OSA) residuals for combTMB model. — OSA_residuals","text":"https://www.researchgate.net/publication/316581864_Validation_of_ecological_state_space_models_using_the_Laplace_approximation","code":""},{"path":"/reference/partvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Partition of the variance in a bbn family in combTMB — partvar","title":"Partition of the variance in a bbn family in combTMB — partvar","text":"bbn model, variance may split three terms. first component decomposition represents variability due randomness comes underlying Poisson model. two components refer variability due randomness explained presence liability proneness, respectively. function similar one presented GWRM package [GWRM::partvar], user needs inform values k rho.","code":""},{"path":"/reference/partvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition of the variance in a bbn family in combTMB — partvar","text":"","code":"partvar(object, k, rho, ...)"},{"path":"/reference/partvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partition of the variance in a bbn family in combTMB — partvar","text":"object object class combTMB partition desired. k value obtained parameter obtained adjustment rho value obtained parameter obtained adjustment ... arguments passed methods","code":""},{"path":"/reference/partvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partition of the variance in a bbn family in combTMB — partvar","text":"Two data frames tibble format, ratio sources variation sources variation variance splitted.","code":""},{"path":"/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for combTMB models — predict_combTMB","title":"Predict method for combTMB models — predict_combTMB","text":"Predictions can original dataset new dataset","code":""},{"path":"/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for combTMB models — predict_combTMB","text":"","code":"# S3 method for combTMB predict(   object,   newdata = NULL,   type = c(\"link\", \"response\"),   re_form = NULL,   se_fit = FALSE,   cov_fit = FALSE,   na.action = na.pass,   ... )"},{"path":"/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for combTMB models — predict_combTMB","text":"object fitted object class “combTMB” newdata data frame making predictions. must dataframe prediction columns fitted data type type prediction required. default \"link\" scale linear predictors; alternative \"response\" scale response variable re_form `NULL` specify individual-level predictions; ~0 NA specify population-level predictions. se_fit logical switch indicating standard errors required. Default FALSE. Standard errors specifying individual-level predictions implemented newdata (re_form must equal, NA, ~0 ) cov_fit return covariance matrix predicted values? na.action parameter determines missing values newdata. default na.pass, ie action taken. ... Currently used.","code":""},{"path":"/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for combTMB models — predict_combTMB","text":".","code":""},{"path":"/reference/predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method for combTMB models — predict_combTMB","text":"","code":"# \\donttest{ library(combTMB) #Poisson-Normal model m1 <- combTMB(OT ~ Period+(1|Donor), family=poisson(), data=embryos)  #Individual-level predictions predictions <- predict(m1) head(predictions) #> [1] 2.769423 2.419359 2.352045 2.686536 2.352045 2.547652  #Population-level predictions predictions <- predict(m1, re_form = NA) head(predictions) #> [1] 2.755874 2.755874 2.755874 2.755874 2.755874 2.755874 # }"},{"path":"/reference/ranef.combTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Random Effects — ranef.combTMB","title":"Extract Random Effects — ranef.combTMB","text":"Extract random effects fitted combTMB model","code":""},{"path":"/reference/ranef.combTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Random Effects — ranef.combTMB","text":"","code":"# S3 method for combTMB ranef(object, ...)"},{"path":"/reference/ranef.combTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Random Effects — ranef.combTMB","text":"object combTMB model ... Currently used","code":""},{"path":"/reference/ranef.combTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Random Effects — ranef.combTMB","text":"ranef, object class ranef.combTMB two components: cond list data frames, containing random effects fullranef data frame :","code":""},{"path":"/reference/ranef.combTMB.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract Random Effects — ranef.combTMB","text":"show complete structure use:  print(ranef(model),simplify=FALSE)","code":""},{"path":"/reference/ranef.combTMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Random Effects — ranef.combTMB","text":"","code":"# \\donttest{ library(combTMB) #Poisson-Normal model m1 <- combTMB(OT ~ Period+(1|Donor), family=poisson(), data=embryos) summary(m1) #> Family: poisson  #> Link function: log  #> Formula: OT ~ Period + (1 | Donor)  #> Number of obs: 1148  #> -2 x logLik         AIC         BIC    df.resid  #>      7839.5      7845.5      7860.7        1145  #>  #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  2.69168    0.03307  81.397  < 2e-16 *** #> PeriodP2     0.06419    0.01859   3.454 0.000553 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Random effects: #>                   Estimate Std. Error #> Donor (Intercept)    0.268      0.025 #>  #> Number of subjects: 318  r <- ranef(m1) print(r, simplify=FALSE) #> $cond #> $cond$Donor #>        Intercept #> 1   -0.566073164 #> 2    0.538838911 #> 3    0.115800446 #> 4    1.191022591 #> 5   -0.092467296 #> 6   -0.235067767 #> 7    0.466452505 #> 8    0.259271976 #> 9    0.493022771 #> 10   0.013549338 #> 11   0.641642531 #> 12  -0.115718194 #> 13  -0.356564073 #> 14   0.790337869 #> 15   0.650682553 #> 16   0.293780154 #> 17   0.111177744 #> 18   0.691546129 #> 19  -0.336514863 #> 20  -0.514491042 #> 21  -0.226786520 #> 22  -0.488309160 #> 23  -0.202414642 #> 24   0.053533037 #> 25   0.091560425 #> 26   0.109790385 #> 27   0.866897881 #> 28  -0.552003726 #> 29   0.332924525 #> 30  -0.335367955 #> 31   0.702843407 #> 32   0.401238132 #> 33   0.506444652 #> 34  -0.031084594 #> 35  -0.506662334 #> 36  -0.182907084 #> 37  -0.366385091 #> 38  -0.310809749 #> 39  -0.674494817 #> 40  -0.287258879 #> 41   0.140060384 #> 42   0.085788885 #> 43   0.843186567 #> 44   0.491471120 #> 45  -0.702359685 #> 46   1.342472929 #> 47   0.582201159 #> 48   0.121757826 #> 49  -0.295619339 #> 50  -0.370197618 #> 51   0.967179746 #> 52  -0.271026138 #> 53   0.357409585 #> 54  -0.763962019 #> 55   0.363926720 #> 56   0.513183239 #> 57   0.094833297 #> 58  -0.676199892 #> 59  -1.201493972 #> 60   0.184148661 #> 61   0.157201470 #> 62   0.194365549 #> 63   0.539472097 #> 64   0.325380563 #> 65   0.011862781 #> 66   0.489570085 #> 67   1.229783870 #> 68   0.175871060 #> 69   0.053533037 #> 70   0.219195859 #> 71  -0.048336629 #> 72   0.157201470 #> 73   0.681781167 #> 74   0.371208626 #> 75   0.702484048 #> 76  -0.335367955 #> 77   0.325380563 #> 78   0.472434373 #> 79   0.007240361 #> 80  -0.407326168 #> 81   0.609065852 #> 82   0.585778003 #> 83   0.285522686 #> 84   0.286958911 #> 85   0.505652104 #> 86   0.435569421 #> 87   0.693239447 #> 88   0.325380563 #> 89   0.439714397 #> 90  -0.104583747 #> 91   0.636590345 #> 92   0.783355504 #> 93   0.606847790 #> 94   0.148028351 #> 95   0.853784766 #> 96   0.453715905 #> 97   0.783984753 #> 98   0.691546129 #> 99   0.076069798 #> 100 -0.235067767 #> 101 -0.004019668 #> 102  0.395047833 #> 103 -0.046396406 #> 104  0.351076839 #> 105  0.096034324 #> 106 -0.042545379 #> 107  0.244269260 #> 108 -0.597888579 #> 109 -0.189193349 #> 110 -0.240794375 #> 111  0.371208626 #> 112  0.315956814 #> 113 -0.432970391 #> 114  0.583642167 #> 115  0.233175005 #> 116  0.096034324 #> 117 -0.134733173 #> 118  0.316563304 #> 119  0.111177744 #> 120  0.242253758 #> 121 -0.306924266 #> 122 -0.200968162 #> 123  0.512619783 #> 124 -0.115987356 #> 125  1.209748109 #> 126  0.937119893 #> 127 -0.846405136 #> 128  0.298363596 #> 129 -0.090385749 #> 130  0.744013091 #> 131 -0.403828617 #> 132 -0.863507173 #> 133 -0.155235999 #> 134 -0.159064493 #> 135  0.533878001 #> 136  0.939237944 #> 137 -0.694555460 #> 138 -0.825186490 #> 139  0.389040328 #> 140 -0.260992202 #> 141  0.363926720 #> 142  0.069663514 #> 143 -0.674494817 #> 144  0.201528836 #> 145  0.315956814 #> 146 -0.277209197 #> 147 -0.055700227 #> 148  0.393737812 #> 149  0.987464113 #> 150  0.583171147 #> 151  0.063337651 #> 152 -0.158621466 #> 153 -0.092467296 #> 154  0.363926720 #> 155 -0.215036629 #> 156 -0.270254578 #> 157  0.430353959 #> 158 -0.078234625 #> 159 -0.069338348 #> 160 -0.717543094 #> 161  0.546243309 #> 162  0.111177744 #> 163  0.321428380 #> 164 -0.092467296 #> 165  0.013549338 #> 166  0.879882730 #> 167 -0.555893101 #> 168  0.086025705 #> 169 -0.403828617 #> 170  0.575280730 #> 171 -1.114846157 #> 172  0.749699892 #> 173  0.244269260 #> 174  0.424600540 #> 175  0.454784391 #> 176 -0.728358049 #> 177  0.493022771 #> 178 -0.103160993 #> 179 -0.967213668 #> 180 -0.078234625 #> 181 -0.044167731 #> 182 -0.060337911 #> 183 -0.403828617 #> 184 -0.144596077 #> 185 -0.370197618 #> 186  0.539472097 #> 187 -0.208222596 #> 188  0.345857982 #> 189 -0.042545379 #> 190 -0.509738576 #> 191  0.014768631 #> 192 -0.267576659 #> 193 -0.429586819 #> 194 -0.149032270 #> 195  0.224414573 #> 196 -0.717543094 #> 197 -0.564879331 #> 198 -0.393413559 #> 199 -0.344996032 #> 200  0.401238132 #> 201  0.325380563 #> 202 -0.136229306 #> 203 -0.134733173 #> 204 -0.092467296 #> 205 -0.143327917 #> 206 -0.106930668 #> 207 -0.042545379 #> 208 -0.376205902 #> 209 -0.552003726 #> 210 -0.024980987 #> 211 -0.769323755 #> 212  0.014967563 #> 213 -0.092467296 #> 214 -0.403828617 #> 215 -0.270254578 #> 216 -0.807851349 #> 217  0.329901074 #> 218 -0.475931519 #> 219 -0.149032270 #> 220  0.013549338 #> 221 -0.632407481 #> 222 -0.415276657 #> 223 -0.509738576 #> 224 -1.030410646 #> 225 -0.107325614 #> 226  0.075321654 #> 227 -0.167208185 #> 228 -0.577594243 #> 229  0.201528836 #> 230 -0.492760436 #> 231  0.162381391 #> 232 -0.072445901 #> 233  0.063337651 #> 234  0.397066256 #> 235 -0.383703513 #> 236  0.426427209 #> 237  0.272381891 #> 238  0.122892966 #> 239 -0.403828617 #> 240  0.300968400 #> 241 -0.110871976 #> 242 -0.179277726 #> 243 -0.967213668 #> 244  0.846947840 #> 245 -0.447273973 #> 246 -1.256265874 #> 247  0.044062946 #> 248 -0.516692509 #> 249  0.691546129 #> 250 -0.477919121 #> 251  0.146962775 #> 252 -0.841188732 #> 253 -0.143327917 #> 254 -1.245275063 #> 255  0.219195859 #> 256  0.143090341 #> 257  0.014967563 #> 258 -0.110920717 #> 259 -0.307182566 #> 260 -0.276034007 #> 261 -0.808685103 #> 262 -0.509738576 #> 263  0.472434373 #> 264  0.547037833 #> 265  0.181412932 #> 266  0.850346560 #> 267  0.325380563 #> 268  0.132087915 #> 269 -0.178215842 #> 270 -0.325131598 #> 271  0.013549338 #> 272  0.597198386 #> 273 -0.948257815 #> 274  0.338808597 #> 275  0.387609672 #> 276  0.444801358 #> 277 -0.475931519 #> 278  0.168072015 #> 279  0.094808045 #> 280  0.160136354 #> 281  0.244269260 #> 282  0.331565472 #> 283  0.053533037 #> 284 -0.208222596 #> 285  0.478727776 #> 286 -0.015534020 #> 287  0.989119258 #> 288  0.329506256 #> 289 -0.015534020 #> 290 -0.254700958 #> 291  0.728354734 #> 292 -0.548792380 #> 293  0.201528836 #> 294 -0.448024062 #> 295 -0.144596077 #> 296 -0.816315354 #> 297 -0.049962272 #> 298 -0.832096920 #> 299 -0.104026419 #> 300 -0.023237159 #> 301 -0.229946704 #> 302 -0.039294209 #> 303  0.210529027 #> 304 -0.328014631 #> 305 -0.005068467 #> 306 -1.066306776 #> 307  0.278042142 #> 308 -0.877334861 #> 309 -0.115718194 #> 310 -0.425075916 #> 311 -0.863507173 #> 312 -0.247048781 #> 313 -0.935965419 #> 314 -0.316295127 #> 315  0.150369296 #> 316 -0.367063403 #> 317  0.115787181 #> 318 -1.258884946 #>  #>  #> $fullranef #>           group     estimate  std.error #> 1      Donor_18 -0.566073164 0.10897589 #> 2      Donor_19  0.538838911 0.06838369 #> 3      Donor_25  0.115800446 0.12043604 #> 4      Donor_69  1.191022591 0.14197946 #> 5     Donor_170 -0.092467296 0.23651601 #> 6     Donor_347 -0.235067767 0.18894266 #> 7     Donor_704  0.466452505 0.11651222 #> 8     Donor_708  0.259271976 0.11383975 #> 9     Donor_739  0.493022771 0.19165295 #> 10    Donor_780  0.013549338 0.22685372 #> 11    Donor_832  0.641642531 0.06591015 #> 12    Donor_912 -0.115718194 0.15516972 #> 13    Donor_919 -0.356564073 0.26786245 #> 14    Donor_930  0.790337869 0.12468841 #> 15    Donor_936  0.650682553 0.13256238 #> 16    Donor_965  0.293780154 0.15238319 #> 17   Donor_1061  0.111177744 0.21816860 #> 18   Donor_1101  0.691546129 0.17122793 #> 19   Donor_1375 -0.336514863 0.14712133 #> 20   Donor_1414 -0.514491042 0.12602503 #> 21   Donor_1519 -0.226786520 0.15944273 #> 22   Donor_1641 -0.488309160 0.15963546 #> 23   Donor_1755 -0.202414642 0.15775198 #> 24   Donor_1769  0.053533037 0.13979021 #> 25   Donor_1789  0.091560425 0.13860944 #> 26   Donor_1862  0.109790385 0.13749728 #> 27   Donor_1904  0.866897881 0.08644991 #> 28   Donor_1945 -0.552003726 0.28077435 #> 29   Donor_1961  0.332924525 0.12748239 #> 30   Donor_1966 -0.335367955 0.25947641 #> 31   Donor_2112  0.702843407 0.10694050 #> 32   Donor_2130  0.401238132 0.19366455 #> 33   Donor_2501  0.506444652 0.18528523 #> 34   Donor_2775 -0.031084594 0.12944439 #> 35   Donor_3122 -0.506662334 0.28269042 #> 36   Donor_4110 -0.182907084 0.09661794 #> 37   Donor_4132 -0.366385091 0.17109004 #> 38   Donor_4143 -0.310809749 0.16701726 #> 39   Donor_4233 -0.674494817 0.29958184 #> 40   Donor_4321 -0.287258879 0.26112312 #> 41   Donor_4384  0.140060384 0.07738297 #> 42   Donor_4637  0.085788885 0.09682831 #> 43   Donor_4678  0.843186567 0.07022937 #> 44   Donor_4817  0.491471120 0.11523620 #> 45   Donor_4903 -0.702359685 0.23518020 #> 46   Donor_4904  1.342472929 0.09809693 #> 47   Donor_4915  0.582201159 0.13660275 #> 48   Donor_5601  0.121757826 0.10996278 #> 49   Donor_5783 -0.295619339 0.14448990 #> 50   Donor_6051 -0.370197618 0.20557585 #> 51   Donor_6115  0.967179746 0.15194318 #> 52   Donor_6401 -0.271026138 0.12093492 #> 53   Donor_6604  0.357409585 0.08499947 #> 54   Donor_7506 -0.763962019 0.13841595 #> 55   Donor_8011  0.363926720 0.19670279 #> 56   Donor_8376  0.513183239 0.08474736 #> 57   Donor_8521  0.094833297 0.09704943 #> 58   Donor_8539 -0.676199892 0.14554024 #> 59   Donor_8583 -1.201493972 0.19768335 #> 60   Donor_8697  0.184148661 0.11768066 #> 61   Donor_8720  0.157201470 0.21414815 #> 62  Donor_10454  0.194365549 0.07567792 #> 63  Donor_10782  0.539472097 0.18271250 #> 64  Donor_10811  0.325380563 0.19987763 #> 65  Donor_11201  0.011862781 0.07355758 #> 66  Donor_11248  0.489570085 0.09306432 #> 67  Donor_13217  1.229783870 0.06848861 #> 68  Donor_14035  0.175871060 0.08261169 #> 69  Donor_14544  0.053533037 0.13979021 #> 70  Donor_14557  0.219195859 0.15537565 #> 71  Donor_14814 -0.048336629 0.15067326 #> 72  Donor_14903  0.157201470 0.21414815 #> 73  Donor_16052  0.681781167 0.09353892 #> 74  Donor_16070  0.371208626 0.14536971 #> 75  Donor_16075  0.702484048 0.07350314 #> 76  Donor_16154 -0.335367955 0.25947641 #> 77  Donor_20105  0.325380563 0.19987763 #> 78  Donor_20136  0.472434373 0.18796351 #> 79  Donor_20743  0.007240361 0.09880547 #> 80  Donor_20761 -0.407326168 0.12713812 #> 81  Donor_20789  0.609065852 0.09651303 #> 82  Donor_20888  0.585778003 0.08929622 #> 83  Donor_20961  0.285522686 0.20319864 #> 84  Donor_21172  0.286958911 0.15084010 #> 85  Donor_21255  0.505652104 0.10215942 #> 86  Donor_23382  0.435569421 0.07420424 #> 87  Donor_24084  0.693239447 0.06224777 #> 88  Donor_24433  0.325380563 0.19987763 #> 89  Donor_24760  0.439714397 0.07760221 #> 90  Donor_25189 -0.104583747 0.11173150 #> 91  Donor_25282  0.636590345 0.06147785 #> 92  Donor_25623  0.783355504 0.07685706 #> 93  Donor_25640  0.606847790 0.13104564 #> 94  Donor_25676  0.148028351 0.09295532 #> 95  Donor_26108  0.853784766 0.08692990 #> 96  Donor_26219  0.453715905 0.11716753 #> 97  Donor_26484  0.783984753 0.05392468 #> 98  Donor_27647  0.691546129 0.17122793 #> 99  Donor_30028  0.076069798 0.09043982 #> 100 Donor_30228 -0.235067767 0.18894266 #> 101 Donor_30441 -0.004019668 0.14337910 #> 102 Donor_30750  0.395047833 0.10723265 #> 103 Donor_30782 -0.046396406 0.11706509 #> 104 Donor_30836  0.351076839 0.08522756 #> 105 Donor_30893  0.096034324 0.16393141 #> 106 Donor_30920 -0.042545379 0.17404284 #> 107 Donor_30973  0.244269260 0.20667627 #> 108 Donor_31023 -0.597888579 0.22557964 #> 109 Donor_31071 -0.189193349 0.11598712 #> 110 Donor_31111 -0.240794375 0.11866653 #> 111 Donor_31170  0.371208626 0.14536971 #> 112 Donor_31179  0.315956814 0.15090916 #> 113 Donor_31570 -0.432970391 0.17291849 #> 114 Donor_31699  0.583642167 0.09757890 #> 115 Donor_32577  0.233175005 0.13153532 #> 116 Donor_32689  0.096034324 0.16393141 #> 117 Donor_32806 -0.134733173 0.18105408 #> 118 Donor_32964  0.316563304 0.08623292 #> 119 Donor_33125  0.111177744 0.21816860 #> 120 Donor_33182  0.242253758 0.15381870 #> 121 Donor_33306 -0.306924266 0.14742127 #> 122 Donor_33515 -0.200968162 0.12603217 #> 123 Donor_33660  0.512619783 0.10062926 #> 124 Donor_33742 -0.115987356 0.13551694 #> 125 Donor_33863  1.209748109 0.06875228 #> 126 Donor_34458  0.937119893 0.07284749 #> 127 Donor_34504 -0.846405136 0.18504219 #> 128 Donor_34609  0.298363596 0.20772219 #> 129 Donor_35980 -0.090385749 0.15169129 #> 130 Donor_36242  0.744013091 0.12335327 #> 131 Donor_37181 -0.403828617 0.26613219 #> 132 Donor_39489 -0.863507173 0.31888740 #> 133 Donor_39803 -0.155235999 0.15452465 #> 134 Donor_40034 -0.159064493 0.15632555 #> 135 Donor_40297  0.533878001 0.10090797 #> 136 Donor_40580  0.939237944 0.11682056 #> 137 Donor_40667 -0.694555460 0.19686708 #> 138 Donor_40681 -0.825186490 0.15374704 #> 139 Donor_40702  0.389040328 0.14864968 #> 140 Donor_41285 -0.260992202 0.14330651 #> 141 Donor_42445  0.363926720 0.19670279 #> 142 Donor_42545  0.069663514 0.16581595 #> 143 Donor_42583 -0.674494817 0.29958184 #> 144 Donor_42714  0.201528836 0.21032195 #> 145 Donor_43804  0.315956814 0.15090916 #> 146 Donor_44658 -0.277209197 0.16299188 #> 147 Donor_44776 -0.055700227 0.09572821 #> 148 Donor_44861  0.393737812 0.12126355 #> 149 Donor_44939  0.987464113 0.07598021 #> 150 Donor_45174  0.583171147 0.11153076 #> 151 Donor_45508  0.063337651 0.22239829 #> 152 Donor_45656 -0.158621466 0.24882002 #> 153 Donor_45844 -0.092467296 0.23651601 #> 154 Donor_46000  0.363926720 0.19670279 #> 155 Donor_46343 -0.215036629 0.19269969 #> 156 Donor_50473 -0.270254578 0.25321719 #> 157 Donor_50482  0.430353959 0.14164013 #> 158 Donor_50492 -0.078234625 0.18187137 #> 159 Donor_50505 -0.069338348 0.10947031 #> 160 Donor_50556 -0.717543094 0.29745465 #> 161 Donor_50692  0.546243309 0.13877219 #> 162 Donor_50957  0.111177744 0.21816860 #> 163 Donor_52626  0.321428380 0.10010754 #> 164 Donor_52916 -0.092467296 0.23651601 #> 165 Donor_53491  0.013549338 0.22685372 #> 166 Donor_54371  0.879882730 0.10046390 #> 167 Donor_54468 -0.555893101 0.18230914 #> 168 Donor_54712  0.086025705 0.07164940 #> 169 Donor_55135 -0.403828617 0.26613219 #> 170 Donor_55162  0.575280730 0.08896781 #> 171 Donor_55557 -1.114846157 0.33836928 #> 172 Donor_55737  0.749699892 0.09085881 #> 173 Donor_55951  0.244269260 0.20667627 #> 174 Donor_55960  0.424600540 0.08262605 #> 175 Donor_56103  0.454784391 0.11927015 #> 176 Donor_56128 -0.728358049 0.23439186 #> 177 Donor_56132  0.493022771 0.19165295 #> 178 Donor_60056 -0.103160993 0.17862730 #> 179 Donor_60171 -0.967213668 0.32956104 #> 180 Donor_60266 -0.078234625 0.18187137 #> 181 Donor_60985 -0.044167731 0.14593420 #> 182 Donor_62340 -0.060337911 0.11841804 #> 183 Donor_62439 -0.403828617 0.26613219 #> 184 Donor_62466 -0.144596077 0.18706216 #> 185 Donor_62821 -0.370197618 0.20557585 #> 186 Donor_63502  0.539472097 0.18271250 #> 187 Donor_63886 -0.208222596 0.24732291 #> 188 Donor_64666  0.345857982 0.12287325 #> 189 Donor_65255 -0.042545379 0.17404284 #> 190 Donor_65293 -0.509738576 0.21189208 #> 191 Donor_65924  0.014768631 0.17204378 #> 192 Donor_70252 -0.267576659 0.12008270 #> 193 Donor_70277 -0.429586819 0.27503901 #> 194 Donor_70629 -0.149032270 0.24176464 #> 195 Donor_70777  0.224414573 0.15707764 #> 196 Donor_70995 -0.717543094 0.29745465 #> 197 Donor_72204 -0.564879331 0.16506233 #> 198 Donor_73069 -0.393413559 0.14992657 #> 199 Donor_73892 -0.344996032 0.19789158 #> 200 Donor_74371  0.401238132 0.19366455 #> 201 Donor_75568  0.325380563 0.19987763 #> 202 Donor_80211 -0.136229306 0.13802539 #> 203 Donor_81009 -0.134733173 0.18105408 #> 204 Donor_81049 -0.092467296 0.23651601 #> 205 Donor_81093 -0.143327917 0.13427043 #> 206 Donor_81165 -0.106930668 0.18126999 #> 207 Donor_81199 -0.042545379 0.17404284 #> 208 Donor_81297 -0.376205902 0.16872232 #> 209 Donor_81968 -0.552003726 0.28077435 #> 210 Donor_82063 -0.024980987 0.09655031 #> 211 Donor_84009 -0.769323755 0.19960231 #> 212 Donor_84453  0.014967563 0.16978400 #> 213 Donor_84513 -0.092467296 0.23651601 #> 214 Donor_85108 -0.403828617 0.26613219 #> 215 Donor_85189 -0.270254578 0.25321719 #> 216 Donor_85303 -0.807851349 0.30666831 #> 217 Donor_85379  0.329901074 0.14802857 #> 218 Donor_85384 -0.475931519 0.27321902 #> 219 Donor_85433 -0.149032270 0.24176464 #> 220 Donor_85573  0.013549338 0.22685372 #> 221 Donor_85668 -0.632407481 0.28883851 #> 222 Donor_85686 -0.415276657 0.15137463 #> 223 Donor_85718 -0.509738576 0.21189208 #> 224 Donor_85789 -1.030410646 0.22244264 #> 225 Donor_86143 -0.107325614 0.15004014 #> 226 Donor_86174  0.075321654 0.11152679 #> 227 Donor_90034 -0.167208185 0.18357802 #> 228 Donor_90075 -0.577594243 0.14738730 #> 229 Donor_90101  0.201528836 0.21032195 #> 230 Donor_90129 -0.492760436 0.17743414 #> 231 Donor_90185  0.162381391 0.10677324 #> 232 Donor_90192 -0.072445901 0.17629198 #> 233 Donor_90260  0.063337651 0.22239829 #> 234 Donor_90391  0.397066256 0.08936137 #> 235 Donor_90398 -0.383703513 0.11051029 #> 236 Donor_90455  0.426427209 0.10447798 #> 237 Donor_90528  0.272381891 0.12692290 #> 238 Donor_90534  0.122892966 0.10061483 #> 239 Donor_90550 -0.403828617 0.26613219 #> 240 Donor_90881  0.300968400 0.15446652 #> 241 Donor_90882 -0.110871976 0.09964974 #> 242 Donor_90893 -0.179277726 0.18982144 #> 243 Donor_90934 -0.967213668 0.32956104 #> 244 Donor_90943  0.846947840 0.12163395 #> 245 Donor_91112 -0.447273973 0.12299434 #> 246 Donor_91130 -1.256265874 0.17565464 #> 247 Donor_91211  0.044062946 0.08873783 #> 248 Donor_91502 -0.516692509 0.14347866 #> 249 Donor_91678  0.691546129 0.17122793 #> 250 Donor_91734 -0.477919121 0.14104215 #> 251 Donor_91890  0.146962775 0.16034451 #> 252 Donor_91949 -0.841188732 0.18221680 #> 253 Donor_91969 -0.143327917 0.13427043 #> 254 Donor_92084 -1.245275063 0.19704526 #> 255 Donor_92213  0.219195859 0.15537565 #> 256 Donor_92253  0.143090341 0.13437679 #> 257 Donor_92349  0.014967563 0.16978400 #> 258 Donor_92515 -0.110920717 0.11991614 #> 259 Donor_92618 -0.307182566 0.10684635 #> 260 Donor_92631 -0.276034007 0.10539333 #> 261 Donor_92653 -0.808685103 0.23902851 #> 262 Donor_92719 -0.509738576 0.21189208 #> 263 Donor_92812  0.472434373 0.18796351 #> 264 Donor_92969  0.547037833 0.09004328 #> 265 Donor_93000  0.181412932 0.10545418 #> 266 Donor_93094  0.850346560 0.15987575 #> 267 Donor_93109  0.325380563 0.19987763 #> 268 Donor_93117  0.132087915 0.10021176 #> 269 Donor_93118 -0.178215842 0.13635576 #> 270 Donor_93184 -0.325131598 0.09397077 #> 271 Donor_93279  0.013549338 0.22685372 #> 272 Donor_93343  0.597198386 0.11000585 #> 273 Donor_93354 -0.948257815 0.12363735 #> 274 Donor_93517  0.338808597 0.09162315 #> 275 Donor_93549  0.387609672 0.12063118 #> 276 Donor_93551  0.444801358 0.07743983 #> 277 Donor_93601 -0.475931519 0.27321902 #> 278 Donor_93608  0.168072015 0.09865195 #> 279 Donor_93623  0.094808045 0.10185733 #> 280 Donor_93682  0.160136354 0.13336980 #> 281 Donor_93717  0.244269260 0.20667627 #> 282 Donor_93765  0.331565472 0.12365055 #> 283 Donor_93855  0.053533037 0.13979021 #> 284 Donor_93915 -0.208222596 0.24732291 #> 285 Donor_93926  0.478727776 0.14048425 #> 286 Donor_93942 -0.015534020 0.17707472 #> 287 Donor_93966  0.989119258 0.15049314 #> 288 Donor_93967  0.329506256 0.08576177 #> 289 Donor_93983 -0.015534020 0.17707472 #> 290 Donor_94001 -0.254700958 0.13078274 #> 291 Donor_94007  0.728354734 0.09474729 #> 292 Donor_94030 -0.548792380 0.22115783 #> 293 Donor_94037  0.201528836 0.21032195 #> 294 Donor_94086 -0.448024062 0.11550929 #> 295 Donor_94295 -0.144596077 0.18706216 #> 296 Donor_94429 -0.816315354 0.24593901 #> 297 Donor_94434 -0.049962272 0.12047196 #> 298 Donor_94459 -0.832096920 0.16975184 #> 299 Donor_94470 -0.104026419 0.10050118 #> 300 Donor_94598 -0.023237159 0.08740410 #> 301 Donor_94861 -0.229946704 0.09937022 #> 302 Donor_94960 -0.039294209 0.09505025 #> 303 Donor_95005  0.210529027 0.21526962 #> 304 Donor_95097 -0.328014631 0.14879562 #> 305 Donor_95101 -0.005068467 0.14610998 #> 306 Donor_95193 -1.066306776 0.15256035 #> 307 Donor_95228  0.278042142 0.08045752 #> 308 Donor_95248 -0.877334861 0.25181779 #> 309 Donor_95308 -0.115718194 0.15516972 #> 310 Donor_95400 -0.425075916 0.15664833 #> 311 Donor_95541 -0.863507173 0.31888740 #> 312 Donor_95558 -0.247048781 0.12040807 #> 313 Donor_95699 -0.935965419 0.16226456 #> 314 Donor_95749 -0.316295127 0.10849345 #> 315 Donor_95941  0.150369296 0.16222969 #> 316 Donor_95967 -0.367063403 0.12549828 #> 317 Donor_96081  0.115787181 0.22360750 #> 318 Donor_96116 -1.258884946 0.18676864 #>  #Extract Donor r$cond$Donor #>        Intercept #> 1   -0.566073164 #> 2    0.538838911 #> 3    0.115800446 #> 4    1.191022591 #> 5   -0.092467296 #> 6   -0.235067767 #> 7    0.466452505 #> 8    0.259271976 #> 9    0.493022771 #> 10   0.013549338 #> 11   0.641642531 #> 12  -0.115718194 #> 13  -0.356564073 #> 14   0.790337869 #> 15   0.650682553 #> 16   0.293780154 #> 17   0.111177744 #> 18   0.691546129 #> 19  -0.336514863 #> 20  -0.514491042 #> 21  -0.226786520 #> 22  -0.488309160 #> 23  -0.202414642 #> 24   0.053533037 #> 25   0.091560425 #> 26   0.109790385 #> 27   0.866897881 #> 28  -0.552003726 #> 29   0.332924525 #> 30  -0.335367955 #> 31   0.702843407 #> 32   0.401238132 #> 33   0.506444652 #> 34  -0.031084594 #> 35  -0.506662334 #> 36  -0.182907084 #> 37  -0.366385091 #> 38  -0.310809749 #> 39  -0.674494817 #> 40  -0.287258879 #> 41   0.140060384 #> 42   0.085788885 #> 43   0.843186567 #> 44   0.491471120 #> 45  -0.702359685 #> 46   1.342472929 #> 47   0.582201159 #> 48   0.121757826 #> 49  -0.295619339 #> 50  -0.370197618 #> 51   0.967179746 #> 52  -0.271026138 #> 53   0.357409585 #> 54  -0.763962019 #> 55   0.363926720 #> 56   0.513183239 #> 57   0.094833297 #> 58  -0.676199892 #> 59  -1.201493972 #> 60   0.184148661 #> 61   0.157201470 #> 62   0.194365549 #> 63   0.539472097 #> 64   0.325380563 #> 65   0.011862781 #> 66   0.489570085 #> 67   1.229783870 #> 68   0.175871060 #> 69   0.053533037 #> 70   0.219195859 #> 71  -0.048336629 #> 72   0.157201470 #> 73   0.681781167 #> 74   0.371208626 #> 75   0.702484048 #> 76  -0.335367955 #> 77   0.325380563 #> 78   0.472434373 #> 79   0.007240361 #> 80  -0.407326168 #> 81   0.609065852 #> 82   0.585778003 #> 83   0.285522686 #> 84   0.286958911 #> 85   0.505652104 #> 86   0.435569421 #> 87   0.693239447 #> 88   0.325380563 #> 89   0.439714397 #> 90  -0.104583747 #> 91   0.636590345 #> 92   0.783355504 #> 93   0.606847790 #> 94   0.148028351 #> 95   0.853784766 #> 96   0.453715905 #> 97   0.783984753 #> 98   0.691546129 #> 99   0.076069798 #> 100 -0.235067767 #> 101 -0.004019668 #> 102  0.395047833 #> 103 -0.046396406 #> 104  0.351076839 #> 105  0.096034324 #> 106 -0.042545379 #> 107  0.244269260 #> 108 -0.597888579 #> 109 -0.189193349 #> 110 -0.240794375 #> 111  0.371208626 #> 112  0.315956814 #> 113 -0.432970391 #> 114  0.583642167 #> 115  0.233175005 #> 116  0.096034324 #> 117 -0.134733173 #> 118  0.316563304 #> 119  0.111177744 #> 120  0.242253758 #> 121 -0.306924266 #> 122 -0.200968162 #> 123  0.512619783 #> 124 -0.115987356 #> 125  1.209748109 #> 126  0.937119893 #> 127 -0.846405136 #> 128  0.298363596 #> 129 -0.090385749 #> 130  0.744013091 #> 131 -0.403828617 #> 132 -0.863507173 #> 133 -0.155235999 #> 134 -0.159064493 #> 135  0.533878001 #> 136  0.939237944 #> 137 -0.694555460 #> 138 -0.825186490 #> 139  0.389040328 #> 140 -0.260992202 #> 141  0.363926720 #> 142  0.069663514 #> 143 -0.674494817 #> 144  0.201528836 #> 145  0.315956814 #> 146 -0.277209197 #> 147 -0.055700227 #> 148  0.393737812 #> 149  0.987464113 #> 150  0.583171147 #> 151  0.063337651 #> 152 -0.158621466 #> 153 -0.092467296 #> 154  0.363926720 #> 155 -0.215036629 #> 156 -0.270254578 #> 157  0.430353959 #> 158 -0.078234625 #> 159 -0.069338348 #> 160 -0.717543094 #> 161  0.546243309 #> 162  0.111177744 #> 163  0.321428380 #> 164 -0.092467296 #> 165  0.013549338 #> 166  0.879882730 #> 167 -0.555893101 #> 168  0.086025705 #> 169 -0.403828617 #> 170  0.575280730 #> 171 -1.114846157 #> 172  0.749699892 #> 173  0.244269260 #> 174  0.424600540 #> 175  0.454784391 #> 176 -0.728358049 #> 177  0.493022771 #> 178 -0.103160993 #> 179 -0.967213668 #> 180 -0.078234625 #> 181 -0.044167731 #> 182 -0.060337911 #> 183 -0.403828617 #> 184 -0.144596077 #> 185 -0.370197618 #> 186  0.539472097 #> 187 -0.208222596 #> 188  0.345857982 #> 189 -0.042545379 #> 190 -0.509738576 #> 191  0.014768631 #> 192 -0.267576659 #> 193 -0.429586819 #> 194 -0.149032270 #> 195  0.224414573 #> 196 -0.717543094 #> 197 -0.564879331 #> 198 -0.393413559 #> 199 -0.344996032 #> 200  0.401238132 #> 201  0.325380563 #> 202 -0.136229306 #> 203 -0.134733173 #> 204 -0.092467296 #> 205 -0.143327917 #> 206 -0.106930668 #> 207 -0.042545379 #> 208 -0.376205902 #> 209 -0.552003726 #> 210 -0.024980987 #> 211 -0.769323755 #> 212  0.014967563 #> 213 -0.092467296 #> 214 -0.403828617 #> 215 -0.270254578 #> 216 -0.807851349 #> 217  0.329901074 #> 218 -0.475931519 #> 219 -0.149032270 #> 220  0.013549338 #> 221 -0.632407481 #> 222 -0.415276657 #> 223 -0.509738576 #> 224 -1.030410646 #> 225 -0.107325614 #> 226  0.075321654 #> 227 -0.167208185 #> 228 -0.577594243 #> 229  0.201528836 #> 230 -0.492760436 #> 231  0.162381391 #> 232 -0.072445901 #> 233  0.063337651 #> 234  0.397066256 #> 235 -0.383703513 #> 236  0.426427209 #> 237  0.272381891 #> 238  0.122892966 #> 239 -0.403828617 #> 240  0.300968400 #> 241 -0.110871976 #> 242 -0.179277726 #> 243 -0.967213668 #> 244  0.846947840 #> 245 -0.447273973 #> 246 -1.256265874 #> 247  0.044062946 #> 248 -0.516692509 #> 249  0.691546129 #> 250 -0.477919121 #> 251  0.146962775 #> 252 -0.841188732 #> 253 -0.143327917 #> 254 -1.245275063 #> 255  0.219195859 #> 256  0.143090341 #> 257  0.014967563 #> 258 -0.110920717 #> 259 -0.307182566 #> 260 -0.276034007 #> 261 -0.808685103 #> 262 -0.509738576 #> 263  0.472434373 #> 264  0.547037833 #> 265  0.181412932 #> 266  0.850346560 #> 267  0.325380563 #> 268  0.132087915 #> 269 -0.178215842 #> 270 -0.325131598 #> 271  0.013549338 #> 272  0.597198386 #> 273 -0.948257815 #> 274  0.338808597 #> 275  0.387609672 #> 276  0.444801358 #> 277 -0.475931519 #> 278  0.168072015 #> 279  0.094808045 #> 280  0.160136354 #> 281  0.244269260 #> 282  0.331565472 #> 283  0.053533037 #> 284 -0.208222596 #> 285  0.478727776 #> 286 -0.015534020 #> 287  0.989119258 #> 288  0.329506256 #> 289 -0.015534020 #> 290 -0.254700958 #> 291  0.728354734 #> 292 -0.548792380 #> 293  0.201528836 #> 294 -0.448024062 #> 295 -0.144596077 #> 296 -0.816315354 #> 297 -0.049962272 #> 298 -0.832096920 #> 299 -0.104026419 #> 300 -0.023237159 #> 301 -0.229946704 #> 302 -0.039294209 #> 303  0.210529027 #> 304 -0.328014631 #> 305 -0.005068467 #> 306 -1.066306776 #> 307  0.278042142 #> 308 -0.877334861 #> 309 -0.115718194 #> 310 -0.425075916 #> 311 -0.863507173 #> 312 -0.247048781 #> 313 -0.935965419 #> 314 -0.316295127 #> 315  0.150369296 #> 316 -0.367063403 #> 317  0.115787181 #> 318 -1.258884946 # }"},{"path":"/reference/residuals.combTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals method for combTMB models — residuals.combTMB","title":"Residuals method for combTMB models — residuals.combTMB","text":"Quantile residuals response residuals combTMB model","code":""},{"path":"/reference/residuals.combTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals method for combTMB models — residuals.combTMB","text":"","code":"# S3 method for combTMB residuals(object, type = c(\"qr\", \"response\"), ...)"},{"path":"/reference/residuals.combTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals method for combTMB models — residuals.combTMB","text":"object “combTMB” model type Type residual. See details ... currently used.","code":""},{"path":"/reference/residuals.combTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals method for combTMB models — residuals.combTMB","text":"tibble residual values resid","code":""},{"path":"/reference/residuals.combTMB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residuals method for combTMB models — residuals.combTMB","text":"Types residuals currently supported: \"qr\" refers Dunn-Smyth residuals (randomized quantile residuals, Dunn Smyth, 1996) combTMB model. Quantile residuals defined continuous variable \\(Y_{}\\) $$qr_{} = \\Phi^{-1}\\{F(y_{};\\hat{\\mu_{}}, \\hat{\\phi)}\\},$$ \\(F(y_{};\\mu_{}, \\phi)\\) cumulative distribution function (CDF) random variable \\(Y_{}\\), \\(\\Phi(.)\\) CDF standard normal distribution, \\(\\hat{\\mu_{}}\\) typically function \\(x_{}\\) (.e., conditional mean \\(y_{}\\)) \\(\\hat{\\phi)}\\) dispersion parameter. quantile residuals exact standard normal distribution continuous case. discrete case, let lower upper limits region CDF \\(= lim_{\\Delta\\uparrow0}F(y_{}+\\Delta; \\hat{\\mu_{}},\\hat{\\phi})\\) \\(b = F(y;\\hat{\\mu_{}}, \\hat{\\phi)})\\) respectively. notation \\(lim_{\\Delta\\uparrow0}\\) means means limit \\(\\Delta\\) approaches 0 , \\(\\Delta\\) always negative. , define randomized quantile residuals $$qr_{} = \\Phi^{-1}(u),$$ \\(u\\)  uniform random variable interval \\((, b]\\). \"response\" refers response residuals: $$response_{} = y_{}-\\mu,$$ \\(\\mu\\) fitted value \\(y_{}\\).","code":""},{"path":"/reference/residuals.combTMB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Residuals method for combTMB models — residuals.combTMB","text":"Dunn, P. K., Smyth, G. K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics, 5(3), 236-244. Dunn, P. K., Smyth, G. K. (2018). Generalized linear models examples R (pp. 333-369). New York: Springer. Feng, C., Li, L., Sadeghpour, . (2020). comparison residual diagnosis tools diagnosing regression models count data. BMC Medical Research Methodology, 20(1), 1-21.","code":""},{"path":"/reference/residuals.combTMB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Residuals method for combTMB models — residuals.combTMB","text":"Deoclecio Jardim Amorim <deocleciojardimamorim@gmail.com>","code":""},{"path":"/reference/residuals.combTMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residuals method for combTMB models — residuals.combTMB","text":"","code":"# \\donttest{ library(combTMB) fit <- combTMB(onyresp~treatn-1+treatn%in%time, family = binomial(),              data = toenail)  #The response residuals will only be normally distributed in the #case of the gaussian family resi <- residuals(fit, type = \"response\") qqnorm(resi) qqline(resi)   #Quantile residuals  qr_resi <- residuals(fit, type = \"qr\") qqnorm(qr_resi) qqline(qr_resi)  # }"},{"path":"/reference/residuals.combTMBglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals method for combTMB models — residuals.combTMBglm","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"Quantile residuals response residuals combTMB model","code":""},{"path":"/reference/residuals.combTMBglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"","code":"# S3 method for combTMBglm residuals(object, type = c(\"qr\", \"response\"), ...)"},{"path":"/reference/residuals.combTMBglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"object combTMB model type Type residual. See details ... used","code":""},{"path":"/reference/residuals.combTMBglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"tibble residual values resid","code":""},{"path":"/reference/residuals.combTMBglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"Types residuals currently supported: \"qr\" refers Dunn-Smyth residuals (randomized quantile residuals, Dunn Smyth, 1996) combTMB model. Quantile residuals defined continuous variable \\(Y_{}\\) $$qr_{} = \\Phi^{-1}\\{F(y_{};\\hat{\\mu_{}}, \\hat{\\phi)}\\},$$ \\(F(y_{};\\mu_{}, \\phi)\\) cumulative distribution function (CDF) random variable \\(Y_{}\\), \\(\\Phi(.)\\) CDF standard normal distribution, \\(\\hat{\\mu_{}}\\) typically function \\(x_{}\\) (.e., conditional mean \\(y_{}\\)) \\(\\hat{\\phi)}\\) dispersion parameter. quantile residuals exact standard normal distribution continuous case. discrete case, let lower upper limits region CDF \\(= lim_{\\Delta\\uparrow0}F(y_{}+\\Delta; \\hat{\\mu_{}},\\hat{\\phi})\\) \\(b = F(y;\\hat{\\mu_{}}, \\hat{\\phi)})\\) respectively. notation \\(lim_{\\Delta\\uparrow0}\\) means means limit \\(\\Delta\\) approaches 0 , \\(\\Delta\\) always negative. , define randomized quantile residuals $$qr_{} = \\Phi^{-1}(u),$$ \\(u\\)  uniform random variable interval \\((, b]\\). \"response\" refers response residuals: $$response_{} = y_{}-\\mu,$$ \\(\\mu\\) fitted value \\(y_{}\\).","code":""},{"path":"/reference/residuals.combTMBglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"Dunn, P. K., Smyth, G. K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics, 5(3), 236-244. Dunn, P. K., Smyth, G. K. (2018). Generalized linear models examples R (pp. 333-369). New York: Springer. Feng, C., Li, L., Sadeghpour, . (2020). comparison residual diagnosis tools diagnosing regression models count data. BMC Medical Research Methodology, 20(1), 1-21.","code":""},{"path":"/reference/residuals.combTMBglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"Deoclecio Jardim Amorim <deocleciojardimamorim@gmail.com>","code":""},{"path":"/reference/residuals.combTMBglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residuals method for combTMB models — residuals.combTMBglm","text":"","code":"library(combTMB) fit <- combTMBglm(onyresp~treatn-1+treatn%in%time, family = binomial(),              data = toenail)  #The response residuals will only be normally distributed in the #case of the gaussian family resi <- residuals(fit, type = \"response\") qqnorm(resi) qqline(resi)   #Quantile residuals  qr_resi <- residuals(fit, type = \"qr\") qqnorm(qr_resi) qqline(qr_resi)"},{"path":"/reference/sanitycombTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanity check of combTMB model — sanitycombTMB","title":"Sanity check of combTMB model — sanitycombTMB","text":"Sanity check combTMB model","code":""},{"path":"/reference/sanitycombTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanity check of combTMB model — sanitycombTMB","text":"","code":"sanitycombTMB(fit, Std_Error_ratio = 20, Gradient_lim = 0.01)"},{"path":"/reference/sanitycombTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanity check of combTMB model — sanitycombTMB","text":"fit Fitted model [combTMB()] Std_Error_ratio SE ratio abs(parameter values) issue warning Gradient_lim Gradient threshold issue warning","code":""},{"path":"/reference/sanitycombTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanity check of combTMB model — sanitycombTMB","text":"invisible named list checks","code":""},{"path":"/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a combTMB fitted model — simulate_combTMB","title":"Simulate from a combTMB fitted model — simulate_combTMB","text":"Simulate combTMB fitted model","code":""},{"path":"/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a combTMB fitted model — simulate_combTMB","text":"","code":"# S3 method for combTMB simulate(object, nsim = 1, seed = NULL, ...)"},{"path":"/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a combTMB fitted model — simulate_combTMB","text":"object combTMB fitted model nsim number response lists simulate. Defaults 1. seed random number seed. Guarantees reproducibility results ... currently used","code":""},{"path":"/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from a combTMB fitted model — simulate_combTMB","text":"tibble. list length nsim. simulated vector observations size vector response variables original data set.binomial family case simulation two-column matrix success/failure.","code":""},{"path":"/reference/simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from a combTMB fitted model — simulate_combTMB","text":"function, random effects simulated estimated distribution. current version, possible condition estimated random effects.","code":""},{"path":"/reference/summary-combTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of the combTMB models (individual t-tests) — summary-combTMB","title":"Summary of the combTMB models (individual t-tests) — summary-combTMB","text":"Summary combTMB models (individual t-tests)","code":""},{"path":"/reference/summary-combTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of the combTMB models (individual t-tests) — summary-combTMB","text":"","code":"# S3 method for combTMB summary(object, ...)  # S3 method for summary.combTMB print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"/reference/summary-combTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of the combTMB models (individual t-tests) — summary-combTMB","text":"object object class combTMB, result call combTMB(...) ... Currently used x object class combTMB digits minimal number _significant_ digits, see print.default","code":""},{"path":"/reference/summary-combTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of the combTMB models (individual t-tests) — summary-combTMB","text":"object class \"summary.combTMB\", list   components.","code":""},{"path":"/reference/summary-combTMB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of the combTMB models (individual t-tests) — summary-combTMB","text":"Deoclecio Jardim Amorim  <deocleciojardimamorim@gmail.com>","code":""},{"path":"/reference/summary-combTMBglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of the combTMBglm models (individual t-tests) — summary-combTMBglm","title":"Summary of the combTMBglm models (individual t-tests) — summary-combTMBglm","text":"Summary combTMBglm models (individual t-tests)","code":""},{"path":"/reference/summary-combTMBglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of the combTMBglm models (individual t-tests) — summary-combTMBglm","text":"","code":"# S3 method for combTMBglm summary(object, ...)  # S3 method for summary.combTMBglm print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"/reference/summary-combTMBglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of the combTMBglm models (individual t-tests) — summary-combTMBglm","text":"object object class combTMBglm, result call combTMBglm(...). ... Currently used. x object class combTMBglm. digits minimal number _significant_ digits, see print.default.","code":""},{"path":"/reference/summary-combTMBglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of the combTMBglm models (individual t-tests) — summary-combTMBglm","text":"object class \"summary.combTMBglm\", list   components.","code":""},{"path":"/reference/summary-combTMBglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of the combTMBglm models (individual t-tests) — summary-combTMBglm","text":"Deoclecio Jardim Amorim  <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/summary-combTMBglmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of the combTMBglmm models (individual t-tests) — summary-combTMBglmm","title":"Summary of the combTMBglmm models (individual t-tests) — summary-combTMBglmm","text":"Summary combTMBglmm models (individual t-tests)","code":""},{"path":"/reference/summary-combTMBglmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of the combTMBglmm models (individual t-tests) — summary-combTMBglmm","text":"","code":"# S3 method for combTMBglmm summary(object, ...)  # S3 method for summary.combTMBglmm print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"/reference/summary-combTMBglmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of the combTMBglmm models (individual t-tests) — summary-combTMBglmm","text":"object object class combTMBglmm, result call combTMBglmm(...). ... Currently used. x object class combTMBglm. digits minimal number _significant_ digits, see print.default.","code":""},{"path":"/reference/summary-combTMBglmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of the combTMBglmm models (individual t-tests) — summary-combTMBglmm","text":"object class \"summary.combTMBglm\", list   components.","code":""},{"path":"/reference/summary-combTMBglmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of the combTMBglmm models (individual t-tests) — summary-combTMBglmm","text":"Deoclecio Jardim Amorim  <deocleciojardimamorim@gmail.com>.","code":""},{"path":"/reference/timesTwo.html","id":null,"dir":"Reference","previous_headings":"","what":"Cpp code test function: multiply a number by two — timesTwo","title":"Cpp code test function: multiply a number by two — timesTwo","text":"Cpp code test function: multiply number two","code":""},{"path":"/reference/timesTwo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cpp code test function: multiply a number by two — timesTwo","text":"","code":"timesTwo(x)"},{"path":"/reference/timesTwo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cpp code test function: multiply a number by two — timesTwo","text":"x single integer.","code":""},{"path":"/reference/toenail.html","id":null,"dir":"Reference","previous_headings":"","what":"A clinical trial in toenail infection named onychomycosis — toenail","title":"A clinical trial in toenail infection named onychomycosis — toenail","text":"dataset comes randomized, multicenter, parallel-group study compare two oral treatments (coded 0 1) toenail dermatophytic onychomycosis. details see Molenberghs et al. (2010).","code":""},{"path":"/reference/toenail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A clinical trial in toenail infection named onychomycosis — toenail","text":"","code":"data(toenail, package = \"combTMB\")"},{"path":"/reference/toenail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A clinical trial in toenail infection named onychomycosis — toenail","text":"data frame 1908 rows four variables: idnum number patients time number measurements per subject (time) treatn two oral treatments (0 1) onyresp response variable: severity infection, coded 0 (severe) 1 (severe)","code":""},{"path":"/reference/toenail.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A clinical trial in toenail infection named onychomycosis — toenail","text":"Molenberghs, G., Verbeke, G., Demetrio, C. G., Vieira, . M. (2010). family generalized linear models repeated measures normal conjugate random effects. Statistical science, 25(3), 325-347.","code":""},{"path":"/news/index.html","id":"combtmb-0009000","dir":"Changelog","previous_headings":"","what":"combTMB 0.0.0.9000","title":"combTMB 0.0.0.9000","text":"*Versão de desenvolvimento","code":""}]
